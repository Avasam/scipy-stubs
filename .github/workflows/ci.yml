name: CI

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  VERSION_PYTHON: "3.13"
  VERSION_UV: "0.4.20"

jobs:
  lint-and-typecheck:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: ${{ env.VERSION_UV }}

      - name: uv sync
        run: uv sync --python ${{ env.VERSION_PYTHON }} --locked

      - name: markdownlint
        uses: DavidAnson/markdownlint-cli2-action@v17
        with:
          config: ".markdownlint.yaml"
          globs: "*.md"

      - name: ruff check
        run: uv run poe lint --output-format=github

      - name: ruff format
        run: uv run poe format --check

      - name: basedpyright verifytypes
        run: uv run poe verifytypes

      - name: typetest
        run: uv run poe typetest

      - name: typecheck
        run: |
          targets=(
            "__init__.pyi"
            "cluster"
            "constants"
            "datasets"
            "integrate"
            "interpolate"
            "io"
            "linalg"
            "misc"
            "special"
            "stats/distributions.pyi"
            "version.pyi"
          )
          for target in "${targets[@]}"; do
            poe mypy $target
            poe pyright $target
          done

  stubtest:
    needs: lint-and-typecheck
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: [
          # "_lib",
          "cluster",
          "constants",
          "datasets",
          "fft",
          "fftpack",
          "integrate",
          "interpolate",
          "io",
          "linalg",
          "misc",
          # "ndimage",
          "odr",
          "optimize",
          # "signal",
          # "sparse",
          # "spatial",
          "special",
          # "stats",
          "stats.contingency",
          "stats.distributions",
          "version"
        ]
    steps:
      - uses: actions/checkout@v4

      - name: setup uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.VERSION_UV }}
          enable-cache: true

      - name: uv sync
        run: uv sync --python ${{ env.VERSION_PYTHON }}

      - name: stubtest scipy.${{ matrix.package }}
        run: poe stubtest scipy.${{ matrix.package }} -- --ignore-unused-allowlist
