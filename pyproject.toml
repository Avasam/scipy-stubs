[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

#
# project
#

[project]
name = "scipy-stubs"
version = "1.14.1.0.dev0"
description = "Typing stubs for SciPy"
readme = "README.md"
license = "BSD-3-Clause"
authors = [
    {name = "Joren Hammudoglu", "email" = "jhammudoglu@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Stubs Only",
    "Typing :: Typed",
]
requires-python = ">=3.10.1"
dependencies = [
    "scipy>=1.14.1,<1.15",
    "optype>=0.6.1,<0.7",
]

[project.urls]
Repository = "https://github.com/jorenham/scipy-stubs/"
Issues = "https://github.com/jorenham/scipy-stubs/issues"
Changelog = "https://github.com/jorenham/scipy-stubs/releases"
Funding = "https://github.com/sponsors/jorenham"

#
# hatch
#

[tool.hatch.build.targets.wheel]
packages = ["scipy-stubs"]

[tool.hatch.build.targets.sdist]
packages = ["scipy-stubs"]
exclude = [
    "/.cache",
    "/.github",
    "/.mypy_cache",
    "/.pytest_cache",
    "/.ruff_cache",
    "/.tox",
    "/.venv",
    "/.vscode",
    "/dist",
    "/tests",
    ".editorconfig",
    ".gitignore",
    ".mardownlint.yaml",
    ".pre-commit-config.yaml",
    ".python-version",
    "CODE_OF_CONDUCT.md",
    "README.md",
    "SECURITY.md",
    "uv.lock",
]

#
# uv
#

[tool.uv]
dev-dependencies = [
    "scipy==1.14.1",

    "basedmypy>=2.6.0,<3",
    "basedpyright>=1.18.4,<2",
    "ruff>=0.6.9,<1",

    "poethepoet>=0.29.0,<1",
    "pre-commit>=4.0.1,<5",
]
python-downloads = "manual"
python-preference = "system"

#
# poe
#

[tool.poe.executor]
type = "virtualenv"
location = "./.venv"

[tool.poe.tasks]
clean = """
rm -rf
    scipy-stubs/**/*.pyc
    scipy-stubs/**/__pycache__
    ./**/.mypy_cache
    ./**/.ruff_cache
"""

lint = "ruff check"
format = "ruff format"
pre-commit = "pre-commit run --all-files"

_typetest_bpr = "basedpyright tests/typetests"
_typetest_mypy = "mypy --config-file=pyproject.toml tests/typetests"
typetest = ["_typetest_bpr", "_typetest_mypy"]

[tool.poe.tasks.mypy]
cmd = "mypy --config-file=pyproject.toml scipy-stubs/$path"
args = [{name = "path", positional = true, multiple = false, default = ""}]

[tool.poe.tasks.pyright]
cmd = "basedpyright scipy-stubs/$path"
args = [{name = "path", positional = true, multiple = false, default = ""}]

[tool.poe.tasks.verifytypes]
cmd = "basedpyright --ignoreexternal --verifytypes scipy-stubs/$path"
args = [{name = "path", positional = true, multiple = false, default = ""}]

[tool.poe.tasks.stubtest]
cmd = """
stubtest
    --mypy-config-file=pyproject.toml
    --allowlist=tests/stubtest/allowlist.txt
    $modules
"""
args = [{name = "modules", positional = true, multiple = true, default = "scipy"}]

#
# [based]mypy
#

[tool.mypy]
python_version = "3.10"
strict = true
disable_bytearray_promotion = true
disable_memoryview_promotion = true
disallow_any_explicit = false  # no other way to type e.g. `float64 <: number[Any]`
disallow_untyped_defs = false  # TODO
disallow_incomplete_defs = false  # TODO
warn_unused_ignores = true

#
# [based]pyright
#

[tool.pyright]
include = ["scipy-stubs", "tests/typetests"]
venv = ".venv"
venvPath = "."
stubPath = "."
pythonVersion = "3.10"
pythonPlatform = "All"
typeCheckingMode = "strict"

deprecateTypingAliases = true
enableTypeIgnoreComments = false
reportDeprecated = false
reportIgnoreCommentWithoutRule = true
reportImplicitRelativeImport = true
reportInvalidCast = true
reportPrivateUsage = false
reportUnnecessaryTypeIgnoreComment = true

#
# ruff
#

[tool.ruff]
builtins = ["reveal_locals", "reveal_type"]
exclude = [".venv"]
force-exclude = true
target-version = "py310"
# https://typing.readthedocs.io/en/latest/guides/writing_stubs.html#maximum-line-length
line-length = 130
src = ["scipy-stubs"]

[tool.ruff.format]
line-ending = "lf"
skip-magic-trailing-comma = false

[tool.ruff.lint]
ignore = [
    "ANN", # TODO
    "E741",
    "COM812", # ruff format compat
    "PYI054", # numeric-literal-too-long
]
preview = true
select = [
    "E",
    "W",
    "I",
    "UP",
    "ANN",
    "COM",
    "EXE",
    "ICN",
    "INP",
    "PYI",
    "Q",
    "TID",
    "TCH",
    "ERA",
    "PGH",
    "RUF",
    "PLC0105",
    "PLC0131",
    "PLC0132",
    "PLC0414",
    "PLE0303",
    "PLE0304",
    "PLE0305",
    "PLE0307",
    "PLE0308",
    "PLE0309",
    "PLE0604",
    "PLE0605",
    "PLE1132",
]

[tool.ruff.lint.flake8-import-conventions]
banned-from = [
    "numpy",
    "numpy.dtypes",
    "numpy.exceptions",
    "numpy.emath",
    "numpy.fft",
    "numpy.linalg",
    "numpy.ma",
    "numpy.polynomial",
    "numpy.random",
    "numpy.rec",
    "numpy.typing",
    "numpy.strings",
    "optype",
    "optype.numpy",
    "optype.typing",
]
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"numpy" = "np"
"numpy.polynomial" = "npp"
"numpy.typing" = "npt"
"optype" = "op"
"optype.numpy" = "onpt"
"scipy" = "sp"
"scipy._typing" = "spt"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["scipy"]
no-lines-before = ["typing", "first-party", "local-folder"]
section-order = [
    "standard-library",
    "typing",
    "third-party",
    "first-party",
    "local-folder",
]
split-on-trailing-comma = true

[tool.ruff.lint.isort.sections]
typing = ["collections.abc", "types", "typing", "typing_extensions"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
